{"version":3,"file":"components-Dropdown-Dropdown-stories.541788e4.iframe.bundle.js","mappings":";;;;AAaA;AACA;AACA","sources":["webpack://patel_tiyaben_ui_garden/./src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport type DropdownProps = {\r\n  options: string[];\r\n  onChange?: (value: string) => void;  // Ensure onChange is optional\r\n  disabled?: boolean;\r\n};\r\n\r\nconst StyledSelect = styled.select`\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  font-size: 16px;\r\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'pointer')};\r\n  background-color: ${(props) => (props.disabled ? '#f0f0f0' : 'white')};\r\n`;\r\n\r\nconst Dropdown: React.FC<DropdownProps> = ({ options, onChange = () => {}, disabled = false }) => {\r\n  return (\r\n    <StyledSelect onChange={(e) => onChange?.(e.target.value)} disabled={disabled}>\r\n      {options.map((option, index) => (\r\n        <option key={index} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </StyledSelect>\r\n  );\r\n};\r\n\r\nexport default Dropdown;"],"names":[],"sourceRoot":""}